<?php
/**	op-core-tutorial:/OP.php
 *
 * @created    2025-09-22
 * @version    1.0
 * @package    op-core
 * @subpackage tutorial
 * @author     Tomoaki Nagahara
 * @copyright  Tomoaki Nagahara All right reserved.
 */

/**	namespace
 *
 */
namespace OP;

?>
<section class="markdown" data-translation="true">
# `OP()`

First, letâ€™s explain about `OP()`.
`OP()` is the core function of the ONEPIECE Framework.
It connects all the features of the ONEPIECE Framework, and by using `OP()`, you can access every function within the framework.
</section>

<section class="markdown" data-translation="true">
## `OP()->Unit()`

The function you will use most is `OP()->Unit()`.
`OP()->Unit()` connects the main ONEPIECE units with a method chain.
For example, if you want to access `App::Title()`, you would do this:

```php
OP()->Unit()->App()->Title('TOP');
```

However, the only unit that can be called by method chaining are those set in `OP_UNIT_MAPPER`.
Other units can be obtained using arguments as follows:

```php
$balance = OP()->Unit('Bitcoin')->GetBalance();
```

If you need input completion, assign the instance to a variable as follows:

```php
/* @var $bitcoin \\OP\\UNIT\\Bitcoin */
$bitcoin = OP()->Unit('Bitcoin');
```
</section>
